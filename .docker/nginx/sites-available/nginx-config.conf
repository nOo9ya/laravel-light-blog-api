# Laravel Light Blog - Nginx 설정
# 프로덕션 환경용 최적화된 설정

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=global:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;

# SSL 설정 (certbot이 자동으로 추가)
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # HTTP에서 HTTPS로 리다이렉트
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    root /var/www/laravel-light-blog/public;
    index index.php index.html index.htm;
    
    # SSL 인증서 (Let's Encrypt에서 자동 설정)
    # ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # 기본 위치 (Laravel 라우팅)
    location / {
        limit_req zone=global burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # 로그인/회원가입 페이지 (Rate limiting 강화)
    location ~ ^/(login|register|password|admin/login) {
        limit_req zone=login burst=5 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # API 엔드포인트
    location ~ ^/api/ {
        limit_req zone=api burst=30 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP 파일 처리
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # PHP-FPM 최적화
        fastcgi_read_timeout 300;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 300;
        
        # HTTPS 확인 (Laravel용)
        fastcgi_param HTTPS on;
        fastcgi_param HTTP_SCHEME https;
    }
    
    # 정적 파일 캐싱 (이미지, CSS, JS)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|webp|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
        add_header Vary Accept-Encoding;
        access_log off;
        log_not_found off;
        
        # 크로스 도메인 폰트 허용
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # 업로드된 파일 캐싱
    location ~* ^/storage/(.+\.(jpg|jpeg|png|gif|webp|svg))$ {
        expires 6M;
        add_header Cache-Control "public, no-transform";
        add_header Vary Accept-Encoding;
        access_log off;
        try_files $uri =404;
    }
    
    # robots.txt 캐싱
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
        log_not_found off;
    }
    
    # sitemap.xml 캐싱
    location = /sitemap.xml {
        expires 1h;
        add_header Cache-Control "public";
        access_log off;
        try_files $uri /index.php?$query_string;
    }
    
    # 민감한 파일 접근 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Laravel 보안 디렉토리 차단
    location ~ ^/(vendor|storage|bootstrap|tests|database|config|routes)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # PHP 파일 직접 접근 차단 (public 제외)
    location ~ ^/(app|bootstrap|config|database|resources|routes|storage|tests|vendor)/.+\.php$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 환경 파일 차단
    location ~ /\.(env|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 백업 파일 차단
    location ~ \.(bak|backup|old|tmp|temp|sql|gz|tar|zip)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 에러 페이지
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
    }
    
    # 로그 설정
    access_log /var/log/nginx/laravel-blog-access.log;
    error_log /var/log/nginx/laravel-blog-error.log;
    
    # 클라이언트 업로드 크기 제한
    client_max_body_size 25M;
    client_body_timeout 60;
    client_header_timeout 60;
    
    # 브라우저 캐시 무효화 (개발시에만 사용)
    # add_header Last-Modified $date_gmt;
    # add_header Cache-Control 'no-store, no-cache';
    # if_modified_since off;
    # expires off;
    # etag off;
}

# 추가 도메인이 있는 경우 (www 없는 버전으로 리다이렉트)
# server {
#     listen 443 ssl http2;
#     server_name www.your-domain.com;
#     return 301 https://your-domain.com$request_uri;
# }